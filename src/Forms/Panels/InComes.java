package Forms.Panels;

import Library.Helper;
import Library.WordWrapCellRenderer;
import Library.State;
import Model.InComesModel;
import entity.InCome;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Calendar;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Trieu Tai Niem
 */
public class InComes extends javax.swing.JPanel {
    InComesModel inComesModel = new InComesModel();
    HashMap minMaxDate;
    
    int currentMonth = 0;
    int currentYear = 0;
    
    /**
     * Creates new form InComes
     */
    public InComes() {
        initComponents();
        searchField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (searchField.getText().equals("Nhập từ khóa...")) {
                    searchField.setText("");
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (searchField.getText().isEmpty()) {
                    searchField.setText("Nhập từ khóa...");
                }
            }
        });
        
        initTableStyles();
       
        //get min max date and init current year, month
        new Thread(() -> {
            minMaxDate = inComesModel.getMinMaxDate();
            currentMonth = Calendar.getInstance().get(Calendar.MONTH)+1;
            currentYear = Calendar.getInstance().get(Calendar.YEAR);
            btnNextMonth.setVisible(false);
            initControlDate();
        }).start();
    }
    
    private  void initTableStyles() {
        incomesTable.getTableHeader().setPreferredSize(new Dimension(100, 30));
        incomesTable.getColumnModel().getColumn(0).setMaxWidth(50);
        incomesTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        incomesTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        incomesTable.getColumnModel().getColumn(3).setPreferredWidth(180);
        incomesTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        
        //set padding and wrap word for table cell
        for(int i = 0; i < incomesTable.getColumnCount(); i++) {
            incomesTable.getColumnModel().getColumn(i).setCellRenderer(new WordWrapCellRenderer());;
        }
        
        //set align for column of table
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        incomesTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        incomesTable.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
    }
    
    private void getAllInComes() {
        ArrayList<InCome> allInComes = inComesModel.getAllInComes();
        showInComesToTable(allInComes);
    }
    
    private void showInComesToTable(ArrayList<InCome> data) {
        DefaultTableModel tableModel = (DefaultTableModel) incomesTable.getModel();
        tableModel.setRowCount(0);
         
        int rowIndex = 0;
        for(InCome row: data) {
            tableModel.addRow(new Object[] {++rowIndex, row.getTitle(), Helper.currencyFormat(row.getAmount()), row.getNote(), row.getDatetime()});
        }
    }
    
    private void initControlDate() {
        lbMonthYear.setText(Helper.monthsInYear[currentMonth-1] + ", "+ currentYear);
        
        if(currentMonth == Integer.parseInt(minMaxDate.get("min_month").toString()) && currentYear == Integer.parseInt(minMaxDate.get("min_year").toString())) {
            btnPrevMonth.setVisible(false);
        } else {
            btnPrevMonth.setVisible(true);
        }
        
        if(currentMonth == Integer.parseInt(minMaxDate.get("max_month").toString()) && currentYear == Integer.parseInt(minMaxDate.get("max_year").toString())) {
            btnNextMonth.setVisible(false);
        } else {
            btnNextMonth.setVisible(true);
        }
        
        ArrayList<InCome> inComeByMonthYear = inComesModel.getInComesByMonth(currentMonth, currentYear);
        showInComesToTable(inComeByMonthYear);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addNewDialog = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        titleFiled = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        noteField = new javax.swing.JTextArea();
        btnReset = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        incomesTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnAddNew = new javax.swing.JButton();
        btnViewAll = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        panelControlDate = new javax.swing.JPanel();
        btnPrevMonth = new javax.swing.JLabel();
        lbMonthYear = new javax.swing.JLabel();
        btnNextMonth = new javax.swing.JLabel();

        addNewDialog.setTitle("Thêm thu nhập mới");
        addNewDialog.setAlwaysOnTop(true);
        addNewDialog.setMinimumSize(new java.awt.Dimension(390, 357));
        addNewDialog.setType(java.awt.Window.Type.POPUP);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Thêm thu nhập");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tiêu đề");

        titleFiled.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Ghi chú");

        amountField.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Số tiền");

        noteField.setColumns(20);
        noteField.setRows(5);
        jScrollPane2.setViewportView(noteField);

        btnReset.setBackground(new java.awt.Color(0, 102, 102));
        btnReset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Nhập lại");
        btnReset.setFocusable(false);
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnResetMousePressed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 102, 102));
        btnSave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Lưu lại");
        btnSave.setFocusable(false);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSaveMousePressed(evt);
            }
        });

        javax.swing.GroupLayout addNewDialogLayout = new javax.swing.GroupLayout(addNewDialog.getContentPane());
        addNewDialog.getContentPane().setLayout(addNewDialogLayout);
        addNewDialogLayout.setHorizontalGroup(
            addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addNewDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addNewDialogLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28)
                        .addComponent(titleFiled))
                    .addGroup(addNewDialogLayout.createSequentialGroup()
                        .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(26, 26, 26)
                        .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amountField)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
            .addGroup(addNewDialogLayout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(108, 108, 108))
        );
        addNewDialogLayout.setVerticalGroup(
            addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNewDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(addNewDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý thu nhập");

        incomesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tiêu đề", "Số tiền", "Ghi chú", "Thời gian"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        incomesTable.setFocusable(false);
        incomesTable.setRowHeight(30);
        jScrollPane1.setViewportView(incomesTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAddNew.setBackground(new java.awt.Color(0, 102, 102));
        btnAddNew.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddNew.setForeground(new java.awt.Color(255, 255, 255));
        btnAddNew.setText("Thêm mới");
        btnAddNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddNew.setFocusable(false);
        btnAddNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAddNewMousePressed(evt);
            }
        });

        btnViewAll.setBackground(new java.awt.Color(0, 102, 102));
        btnViewAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnViewAll.setForeground(new java.awt.Color(255, 255, 255));
        btnViewAll.setText("Xem tất cả");
        btnViewAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewAll.setFocusable(false);
        btnViewAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnViewAllMousePressed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchField.setText("Nhập từ khóa...");

        btnSearch.setBackground(new java.awt.Color(0, 102, 102));
        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Tìm kiếm");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.setFocusable(false);
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSearchMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddNew)
                .addGap(18, 18, 18)
                .addComponent(btnViewAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 336, Short.MAX_VALUE)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnSearch)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchField)
                        .addGap(1, 1, 1))
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(btnAddNew, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(btnViewAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelControlDate.setMaximumSize(new java.awt.Dimension(487, 24));
        panelControlDate.setMinimumSize(new java.awt.Dimension(487, 24));

        btnPrevMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/prev-page.png"))); // NOI18N
        btnPrevMonth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevMonth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPrevMonthMousePressed(evt);
            }
        });

        lbMonthYear.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lbMonthYear.setForeground(new java.awt.Color(0, 153, 153));
        lbMonthYear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMonthYear.setText("Tháng 4, 2019");

        btnNextMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/next-page.png"))); // NOI18N
        btnNextMonth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNextMonth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNextMonthMousePressed(evt);
            }
        });

        javax.swing.GroupLayout panelControlDateLayout = new javax.swing.GroupLayout(panelControlDate);
        panelControlDate.setLayout(panelControlDateLayout);
        panelControlDateLayout.setHorizontalGroup(
            panelControlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlDateLayout.createSequentialGroup()
                .addComponent(btnPrevMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(312, 312, 312)
                .addComponent(lbMonthYear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelControlDateLayout.setVerticalGroup(
            panelControlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnNextMonth)
            .addComponent(btnPrevMonth)
            .addComponent(lbMonthYear, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelControlDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(panelControlDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewAllMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewAllMousePressed
        if(lbMonthYear.isVisible()) {
            getAllInComes();
            btnNextMonth.setVisible(false);
            btnPrevMonth.setVisible(false);
            lbMonthYear.setVisible(false);
            btnViewAll.setText("Xem theo tháng");
            panelControlDate.setPreferredSize(new Dimension(487, 24));
        } else {
            initControlDate();
            lbMonthYear.setVisible(true);
            btnViewAll.setText("Xem tất cả");
        }
    }//GEN-LAST:event_btnViewAllMousePressed

    private void btnPrevMonthMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevMonthMousePressed
        if(currentMonth == 1) {
            currentMonth = 12;
            currentYear--;
        } else {
            currentMonth--;
        }
        initControlDate();
    }//GEN-LAST:event_btnPrevMonthMousePressed

    private void btnNextMonthMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMonthMousePressed
        if(currentMonth == 12) {
            currentMonth = 1;
            currentYear++;
        } else {
            currentMonth++;
        }
        initControlDate();
    }//GEN-LAST:event_btnNextMonthMousePressed

    private void btnSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMousePressed
        ArrayList<InCome> inComeByMonthYear = inComesModel.searchInComes(searchField.getText());
        showInComesToTable(inComeByMonthYear);
        btnNextMonth.setVisible(false);
        btnPrevMonth.setVisible(false);
        lbMonthYear.setVisible(false);
        panelControlDate.setPreferredSize(new Dimension(487, 24));
    }//GEN-LAST:event_btnSearchMousePressed

    private void btnAddNewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewMousePressed
        addNewDialog.setLocationRelativeTo(null);
        addNewDialog.show();
    }//GEN-LAST:event_btnAddNewMousePressed

    private void btnResetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMousePressed
        titleFiled.setText("");
        noteField.setText("");
        amountField.setText("");
    }//GEN-LAST:event_btnResetMousePressed

    private void btnSaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMousePressed
        if(titleFiled.getText().trim().isEmpty() || amountField.getText().trim().isEmpty()) {
            showMessageDialog(addNewDialog, "Trường tiêu đề và số tiền không được bỏ trống.", "Lỗi!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        InCome inCome = new InCome(
            State.currentUser.getId(),
            titleFiled.getText(),
            noteField.getText(),
            Integer.valueOf(amountField.getText())
        );
        
        boolean resuilt = inComesModel.insertNewInCome(inCome);
        if(resuilt) {
            showMessageDialog(addNewDialog, "Đã thêm vào bảng thu nhập.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            initControlDate();
            addNewDialog.dispose();
        } else {
            showMessageDialog(addNewDialog, "Có lỗi trong quá trình thêm vào bảng thu nhập.", "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog addNewDialog;
    private javax.swing.JTextField amountField;
    private javax.swing.JButton btnAddNew;
    private javax.swing.JLabel btnNextMonth;
    private javax.swing.JLabel btnPrevMonth;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JTable incomesTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbMonthYear;
    private javax.swing.JTextArea noteField;
    private javax.swing.JPanel panelControlDate;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField titleFiled;
    // End of variables declaration//GEN-END:variables
}
